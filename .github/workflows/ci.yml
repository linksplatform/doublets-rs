name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  RUST_BACKTRACE: 1
#  later
#  RUSTFLAGS: -Dwarnings
  CARGO_TERM_COLOR: always

  rust_nightly: nightly-2022-07-23

jobs:
  tests-pass:
    name: pass
    runs-on: ubuntu-latest
    needs:
      - test
      - miri
      - clippy
    steps:
      - run: exit 0

  test:
    strategy:
      matrix:
        rust:
          - nightly
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        rustflags:
          - '-C target-cpu=native'
          - '-C target-cpu=native -C target-feature=-avx2'
        features:
          - ''
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Run tests
        run: cargo test ${{ matrix.features }} --release -- --nocapture

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Rust clippy
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v1
      - name: "clippy --all"
        run: cargo clippy --all --tests --all-features

  miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - name: Run miri
        run: |
          cd ci
          chmod +x miri.sh
          ./miri.sh

  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt, clippy

      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build benchmark
        run: cargo build --release --bench benchmark

      - name: Run benchmark
        run: cargo bench --bench benchmark

